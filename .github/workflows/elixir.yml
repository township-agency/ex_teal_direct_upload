name: Elixir CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MIX_ENV: test

jobs:
  test:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        elixir: ['1.10.3']
        otp: ['22.2.8']

    steps:
    - uses: actions/checkout@v2

    - name: Setup elixir
      uses: erlef/setup-elixir@v1
      with:
        otp-version: ${{ matrix.otp }} # Define the OTP version [required]
        elixir-version: ${{ matrix.elixir }} # Define the elixir version [required]

    - name: Retrieve Mix Dependencies Cache
      uses: actions/cache@v1
      id: mix-cache #id to use in retrieve action
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

    - name: Install Mix Dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix hex.organization auth motel --key $MIX_HEX_KEY
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
        mix deps.compile

    - name: Elixir - Warning-Free Compile
      env:
        MIX_ENV: test
      run: mix compile --warnings-as-errors

    - name: Elixir - Standard Formatting
      env:
        MIX_ENV: test
      run: mix format --check-formatted

    - name: Elixir - Code Analysis
      env:
        MIX_ENV: test
      run: mix credo --strict

    - name: Elixir - Run Tests
      env:
        MIX_ENV: test
      run: mix test
